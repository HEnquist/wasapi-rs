var searchIndex = JSON.parse('{\
"wasapi":{"doc":"Wasapi bindings for Rust","t":[13,3,3,3,3,13,3,3,13,4,4,3,13,13,13,13,13,3,3,13,13,13,4,13,13,13,4,4,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11],"n":["Active","AudioCaptureClient","AudioClient","AudioRenderClient","AudioSessionControl","Capture","Device","DeviceCollection","DeviceRemoval","Direction","DisconnectReason","EventCallbacks","Exclusive","ExclusiveModeOverride","Expired","Float","FormatChanged","GUID","Handle","Inactive","Int","Render","SampleType","ServerShutdown","SessionDisconnected","SessionLogoff","SessionState","ShareMode","Shared","Unknown","WasapiError","WaveFormat","as_waveformatex_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","data1","data2","data3","data4","default","default","description","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_signature","from_u128","from_values","from_waveformatex","get_audiocaptureclient","get_audiorenderclient","get_audiosessioncontrol","get_available_space_in_frames","get_avgbytespersec","get_bitspersample","get_blockalign","get_bufferframecount","get_current_padding","get_default_device","get_description","get_device_at_index","get_device_with_name","get_dwchannelmask","get_friendlyname","get_iaudioclient","get_id","get_mixformat","get_nbr_devices","get_nchannels","get_next_nbr_frames","get_periods","get_samplespersec","get_state","get_state","get_subformat","get_validbitspersample","hash","initialize_client","initialize_mta","initialize_sta","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_supported","ne","new","new","new","new","new","read_from_device","read_from_device_to_deque","register_session_notification","reset_stream","set_channel_volume_callback","set_disconnected_callback","set_displayname_callback","set_get_eventhandle","set_groupingparam_callback","set_iconpath_callback","set_simple_volume_callback","set_state_callback","start_stream","stop_stream","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unset_channel_volume_callback","unset_disconnected_callback","unset_displayname_callback","unset_groupingparam_callback","unset_iconpath_callback","unset_simple_volume_callback","unset_state_callback","wait_for_event","wave_fmt","write_to_device","write_to_device_from_deque","zeroed"],"q":["wasapid":["","Struct wrapping an IAudioCaptureClient.","Struct wrapping an IAudioClient.","Struct wrapping an IAudioRenderClient.","Struct wrapping an IAudioSessionControl.","","Struct wrapping an IMMDevice.","Struct wrapping an IMMDeviceCollection.","","Audio direction, playback or capture.","Reason for session disconnect","A structure holding the callbacks for notifications","","","","","","A globally unique identifier (GUID) used to identify COM …","Struct wrapping a HANDLE (event handle).","","","","Sample type, float or integer","","","","States of an AudioSession","Sharemode for device","","","Error returned by the Wasapi crate.","Struct wrapping a WAVEFORMATEXTENSIBLE format descriptor.","get a pointer of type WAVEFORMATEX, used internally","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>GUID</code> for a “generic” WinRT type.","Creates a <code>GUID</code> from a <code>u128</code> value.","Creates a <code>GUID</code> with the given constant values.","Create from a WAVEFORMATEX structure","Get a capture client","Get a rendering (playback) client","Get the AudioSessionControl","Get buffer size minus padding in frames. Use this to find …","Read nAvgBytesPerSec.","Read wBitsPerSample.","Read nBlockAlign.","Get buffer size in frames","Get current padding in frames. This represents the number …","Get the default playback or capture device","Read the Description of an IMMDevice","Get a device from an IMMDeviceCollection using index","Get a device from an IMMDeviceCollection using name","Read dwChannelMask.","Read the FriendlyName of an IMMDevice","Get an IAudioClient from an IMMDevice","Get the Id of an IMMDevice","Get MixFormat of the device. This is the format the device …","Get the number of devices in an IMMDeviceCollection","Read nChannels.","Get number of frames in next packet when in shared mode. …","Get default and minimum periods in 100-nanosecond units","Read nSamplesPerSec.","Read state from an IMMDevice","Get the current state","Read SubFormat.","Read wValidBitsPerSample.","","Initialize an IAudioClient for the given direction, …","Initializes COM for use by the calling thread for the …","Initializes COM for use by the calling thread for a …","","","","","","","","","","","","","","","","","Check if a format is supported. If it’s directly …","","Get an IMMDeviceCollection of all active playback or …","Create a new EventCallbacks with no callbacks set","","Build a WAVEFORMATEXTENSIBLE struct for the given …","Creates a unique <code>GUID</code> value.","Read raw bytes from a device into a slice, returns the …","Read raw bytes data from a device into a deque.","Register to receive notifications","Reset the stream on an IAudioClient","Set a callback for OnChannelVolumeChanged notifications","Set a callback for OnSessionDisconnected notifications","Set a callback for OnDisplayNameChanged notifications","Create and return an event handle for an IAudioClient","Set a callback for OnGroupingParamChanged notifications","Set a callback for OnIconPathChanged notifications","Set a callback for OnSimpleVolumeChanged notifications","Set a callback for OnStateChanged notifications","Start the stream on an IAudioClient","Stop the stream on an IAudioClient","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Remove a callback for OnChannelVolumeChanged notifications","Remove a callback for OnSessionDisconnected notifications","Remove a callback for OnDisplayNameChanged notifications","Remove a callback for OnGroupingParamChanged notifications","Remove a callback for OnIconPathChanged notifications","Remove a callback for OnSimpleVolumeChanged notifications","Remove a callback for OnStateChanged notifications","Wait for an event on a handle, with a timeout given in ms","","Write raw bytes data to a device from a slice. The number …","Write raw bytes data to a device from a deque. The number …","Creates a <code>GUID</code> represented by the all-zero byte-pattern."],"i":[1,0,0,0,0,2,0,0,3,0,0,0,4,3,1,5,3,0,0,1,5,2,0,3,3,3,0,0,4,3,0,0,6,7,8,9,10,11,12,13,14,15,2,4,5,1,3,6,16,7,8,9,10,11,12,13,14,15,2,4,5,1,3,6,16,2,4,5,6,16,2,4,5,6,16,16,16,16,16,14,16,15,16,15,15,1,3,6,16,7,8,9,10,11,12,13,14,15,2,4,5,1,3,6,16,16,16,16,16,6,9,9,9,9,6,6,6,9,9,0,8,7,7,6,8,8,8,9,7,6,12,9,6,8,10,6,6,16,9,0,0,7,8,9,10,11,12,13,14,15,2,4,5,1,3,6,16,9,16,7,14,15,6,16,12,12,10,9,14,14,14,9,14,14,14,14,9,9,2,4,5,6,16,15,7,8,9,10,11,12,13,14,15,2,4,5,1,3,6,16,7,8,9,10,11,12,13,14,15,2,4,5,1,3,6,16,7,8,9,10,11,12,13,14,15,2,4,5,1,3,6,16,14,14,14,14,14,14,14,13,6,11,11,16],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["direction",4]],[[],["sharemode",4]],[[],["sampletype",4]],[[],["waveformat",3]],[[],["guid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[],["guid",3]],[[],["str",15]],[[["guid",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["guid",3]],[[]],[[["constbuffer",3]],["guid",3]],[[["u128",15]],["guid",3]],[[["u32",15],["u16",15],["u16",15]],["guid",3]],[[["waveformatex",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4,[["audiocaptureclient",3],["box",3,[["error",8]]]]]],[[],["result",4,[["audiorenderclient",3],["box",3,[["error",8]]]]]],[[],["result",4,[["audiosessioncontrol",3],["box",3,[["error",8]]]]]],[[],["result",4,[["u32",15],["box",3,[["error",8]]]]]],[[],["u32",15]],[[],["u16",15]],[[],["u32",15]],[[],["result",4,[["u32",15],["box",3,[["error",8]]]]]],[[],["result",4,[["u32",15],["box",3,[["error",8]]]]]],[[["direction",4]],["result",4,[["device",3],["box",3,[["error",8]]]]]],[[],["result",4,[["string",3],["box",3,[["error",8]]]]]],[[["u32",15]],["result",4,[["device",3],["box",3,[["error",8]]]]]],[[["str",15]],["result",4,[["device",3],["box",3,[["error",8]]]]]],[[],["u32",15]],[[],["result",4,[["string",3],["box",3,[["error",8]]]]]],[[],["result",4,[["audioclient",3],["box",3,[["error",8]]]]]],[[],["result",4,[["string",3],["box",3,[["error",8]]]]]],[[],["result",4,[["waveformat",3],["box",3,[["error",8]]]]]],[[],["result",4,[["u32",15],["box",3,[["error",8]]]]]],[[],["u16",15]],[[],["result",4,[["option",4,[["u32",15]]],["box",3,[["error",8]]]]]],[[],["result",4,[["box",3,[["error",8]]]]]],[[],["u32",15]],[[],["result",4,[["u32",15],["box",3,[["error",8]]]]]],[[],["result",4,[["sessionstate",4],["box",3,[["error",8]]]]]],[[],["result",4,[["sampletype",4],["box",3,[["error",8]]]]]],[[],["u16",15]],[[]],[[["waveformat",3],["i64",15],["direction",4],["sharemode",4],["bool",15]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["waveformat",3],["sharemode",4]],["result",4,[["option",4,[["waveformat",3]]],["box",3,[["error",8]]]]]],[[["guid",3]],["bool",15]],[[["direction",4]],["result",4,[["devicecollection",3],["box",3,[["error",8]]]]]],[[]],[[["str",15]]],[[["usize",15],["usize",15],["sampletype",4],["usize",15],["usize",15]]],[[],["result",4,[["guid",3],["error",3]]]],[[["usize",15]],["result",4,[["u32",15],["box",3,[["error",8]]]]]],[[["usize",15],["vecdeque",3]],["result",4,[["box",3,[["error",8]]]]]],[[["weak",3,[["eventcallbacks",3]]]],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4,[["box",3,[["error",8]]]]]],[[]],[[]],[[]],[[],["result",4,[["handle",3],["box",3,[["error",8]]]]]],[[]],[[]],[[]],[[]],[[],["result",4,[["box",3,[["error",8]]]]]],[[],["result",4,[["box",3,[["error",8]]]]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],["result",4,[["box",3,[["error",8]]]]]],null,[[["usize",15],["usize",15]],["result",4,[["box",3,[["error",8]]]]]],[[["usize",15],["usize",15],["vecdeque",3]],["result",4,[["box",3,[["error",8]]]]]],[[],["guid",3]]],"p":[[4,"SessionState"],[4,"Direction"],[4,"DisconnectReason"],[4,"ShareMode"],[4,"SampleType"],[3,"WaveFormat"],[3,"DeviceCollection"],[3,"Device"],[3,"AudioClient"],[3,"AudioSessionControl"],[3,"AudioRenderClient"],[3,"AudioCaptureClient"],[3,"Handle"],[3,"EventCallbacks"],[3,"WasapiError"],[3,"GUID"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};